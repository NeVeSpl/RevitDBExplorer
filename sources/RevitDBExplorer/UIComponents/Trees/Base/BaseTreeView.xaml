<UserControl x:Class="RevitDBExplorer.UIComponents.Trees.Base.BaseTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RevitDBExplorer.UIComponents.Trees.Base.Items"
             xmlns:converters="clr-namespace:RevitDBExplorer.WPF.Converters"    
             xmlns:wpf="clr-namespace:RevitDBExplorer.WPF"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid>
        <Grid.Resources>
            <ResourceDictionary>
                <ResourceDictionary.MergedDictionaries>
                    <ResourceDictionary Source="../../../Resources/Templates/All.xaml"/>
                    <ResourceDictionary Source="../../../Resources/VectorGraphic.xaml"/>
                </ResourceDictionary.MergedDictionaries>

                <Style x:Key="TreeToolButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Background" Value="{DynamicResource TextBox.Background}"/>
                    <Setter Property="Padding" Value="3 2 2 2"/>
                    <Setter Property="Margin" Value="2 0"/>
                    <Setter Property="Width" Value="15"/>
                    <Setter Property="Height" Value="15"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Style.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="4" />
                        </Style>
                    </Style.Resources>
                </Style>

                <wpf:BindingProxy x:Key="Proxy" Data="{Binding}" />
            </ResourceDictionary>
        </Grid.Resources>

        <TreeView ItemsSource="{Binding TreeItems}" BorderThickness="0" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Standard" ScrollViewer.HorizontalScrollBarVisibility="Disabled"  x:Name="cTreeView">
            <TreeView.Resources>
                <converters:ToResourceWithKeyConverter x:Key="ToResourceWithKeyConverter" FrameworkElement="{Binding ElementName=cTreeView}" />
                <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" WhenFalse="Collapsed"/>

                <HierarchicalDataTemplate DataType="{x:Type local:UtilityGroupTreeItem}" ItemsSource="{Binding Items}">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Compare" />
                    </StackPanel>
                </HierarchicalDataTemplate>

                <HierarchicalDataTemplate DataType="{x:Type local:GroupTreeItem}" ItemsSource="{Binding Items}">
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Select in Revit" Command="{Binding Commands.SelectInRevit}" CommandParameter="{Binding}"/>
                            </ContextMenu>
                        </StackPanel.ContextMenu>
                        <StackPanel.Resources>
                            <Style TargetType="{x:Type TextBlock}" x:Key="postfix">
                                <Style.Triggers>
                                    <MultiDataTrigger >
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding Path=IsSelected}" Value="False" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Foreground" Value="{DynamicResource TreeView.Category.Postfix}"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Count}" Value="0">
                                        <Setter Property="Opacity" Value="0.4"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Resources>
                        <TextBlock Text="{Binding Name, Mode=OneWay}" ToolTip="{Binding GroupedByToolTip}"/>
                        <TextBlock Text="[" Margin="0 -1 0 0" Style="{StaticResource postfix}"/>
                        <TextBlock Text="{Binding Count, Mode=OneWay}"  Style="{StaticResource postfix}" />
                        <TextBlock Text="]" Margin="0 -1 0 0" Style="{StaticResource postfix}"/>
                        <StackPanel Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityConverter}}" Margin="3 0 0 0">
                            <Button Style="{StaticResource TreeToolButton}"  ToolTip="Select in Revit" Command="{Binding Commands.SelectInRevit}" CommandParameter="{Binding .}" Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}">
                                <Path Style="{StaticResource IconArrowSelectorTool}" />
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </HierarchicalDataTemplate>

                <HierarchicalDataTemplate DataType="{x:Type local:SnoopableObjectTreeItem}" ItemsSource="{Binding Items}">
                    <StackPanel Orientation="Horizontal" IsHitTestVisible="True" Background="Transparent">
                        <StackPanel.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Select in Revit" Command="{Binding Commands.SelectInRevit}" CommandParameter="{Binding}"/>
                                <MenuItem Header="Show in Revit" Command="{Binding Commands.ShowInRevit}" CommandParameter="{Binding}"/>
                                <MenuItem Header="Isolate in Revit" Command="{Binding Commands.IsolateInRevit}" CommandParameter="{Binding}"/>
                                <MenuItem Header="Draw in Revit (using model lines)" Command="{Binding Commands.DrawInRevit}" CommandParameter="{Binding}"/>
                                <MenuItem Header="Draw in Revit (AVF)" Command="{Binding Commands.DrawInRevitAVF}" CommandParameter="{Binding}"/>
                                <Separator />
                                <MenuItem Header="Freeze" ToolTip="" Command="{Binding Commands.Freeze}" CommandParameter="{Binding}" Visibility="{Binding Data.AllowToFrezeeItem, Source={StaticResource Proxy}, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                
                                <MenuItem Header="Snoop in a new window" Command="{Binding Commands.SnoopInNewWindow}" CommandParameter="{Binding}" />
                            </ContextMenu>
                        </StackPanel.ContextMenu>

                        <Path Style="{Binding Object.NamePrefixIcon, Converter={StaticResource ToResourceWithKeyConverter}, ConverterParameter=Icon}" Margin="0 1 4 0" Fill="{Binding ElementName=cTextBlock, Path=Foreground}"  />
                        <TextBlock x:Name="cTextBlock" IsHitTestVisible="False">             
                             <Run Text="{Binding Prefix, Mode=OneWay}">
                                 <Run.Style>
                                     <Style TargetType="{x:Type Run}">
                                        <Style.Triggers>
                                            <MultiDataTrigger >
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Path=IsSelected}" Value="False" />                                                
                                                </MultiDataTrigger.Conditions>                                               
                                                <Setter Property="Foreground" Value="{DynamicResource TreeView.Object.Prefix}"/>
                                            </MultiDataTrigger>                                        
                                        </Style.Triggers>
                                     </Style>
                                 </Run.Style>
                              </Run>
                             <Run Text="{Binding Object.Name, Mode=OneWay}" />
                             <Run Text="{Binding Object.NamePostfix, Mode=OneWay}"/>
                        </TextBlock>
                        <StackPanel Visibility="{Binding IsSelected, Converter={StaticResource BoolToVisibilityConverter}}" Margin="3 0 0 0">
                            <Button Style="{StaticResource TreeToolButton}"  ToolTip="Select in Revit" Command="{Binding Commands.SelectInRevit}" CommandParameter="{Binding .}" Visibility="{Binding RelativeSource={RelativeSource Mode=Self}, Path=IsEnabled, Converter={StaticResource BoolToVisibilityConverter}}">
                                <Path Style="{StaticResource IconArrowSelectorTool}" />
                            </Button>
                        </StackPanel>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.Resources>

            <TreeView.ItemContainerStyle>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="BorderThickness" Value="1" />
                    <Setter Property="HorizontalAlignment" Value="Stretch" />
                    <Setter Property="IsSelected" Value="{Binding Path=IsSelected, Mode=TwoWay}" />
                    <Setter Property="IsEnabled" Value="{Binding Path=IsEnabled, Mode=TwoWay}"/>
                    <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}" />
                    <Setter Property="Padding" Value="2 1 2 1"/>
                    <Setter Property="Margin" Value="-3 0 0 0"/>

                    <Style.Resources>
                        <Style TargetType="Border">
                            <Setter Property="CornerRadius" Value="2" />
                            <Setter Property="BorderBrush" Value="{DynamicResource TreeViewItem.BorderBrush}" />
                            <Setter Property="BorderThickness" Value="1" />

                        </Style>
                        <!--<SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Yellow"/>-->
                    </Style.Resources>
                    <Style.Triggers>                        
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource TreeViewItem.BorderBrush.IsSelected}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource TreeViewItem.InactiveSelectionHighlightTextBrushKey}"/>
                            <Setter Property="Border.Background" Value="red"/>
                        </MultiTrigger>
                        <DataTrigger Binding="{Binding IsSelectedInRevit}" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource TextBox.Focus.Border}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>

    </Grid>
</UserControl>
